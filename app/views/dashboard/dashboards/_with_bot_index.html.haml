.dashboard
  .dashboard-navbar
    .dashboard-navbar-tabs
      .tab-link.active{data: {tab: 'logs'}}
        %i.fa.fa-file-text-o{aria: {hidden: 'true'}}
        &nbsp; Bot logs
      .tab-link{data: {tab: 'bot'}}
        %i.fa.fa-cog{aria: {hidden: 'true'}}
        &nbsp; Bot config
      .tab-link{data: {tab: 'boss'}}
        %i.fa.fa-cog{aria: {hidden: 'true'}}
        &nbsp; Boss config
    .dashboard-navbar-status
      %p
        %i.fa.fa-plug{aria: {hidden: 'true'}}
        &nbsp;connected:
        %span#bot-connected{data: {channel: current_user.bot.channel}}
          %i.fa.fa-question-circle.text-warning{aria: {hidden: 'true'}}
      %p
        %span#mod= raw inline_svg('sword')
        &nbsp;moderator:
        %span#bot-moderator{data: {channel: current_user.bot.channel}}
          %i.fa.fa-question-circle.text-warning{aria: {hidden: 'true'}}
  .dashboard-content
    .bot-show-link
      %label.string.optional{for: "bot_Boss health"} OBS / Xsplit link
      .input-group
        %input#link.form-control.form-control-sm.readonly{readonly: 'readonly', type: 'text', value: "#{bot_url(@bot)}?token=#{@bot.token}",aria: {label: 'obs / xsplit link'}, }
        %span.input-group-btn
          %button.btn.btn-sm.btn-primary.clipboard-btn{type: 'button', data: {container: 'body', content: 'Copied!', placement: 'bottom', toggle: 'popover', clipboard: {action: 'copy', target: '#link'}}} Copy link!
      %hr
    #logs.tab-content.active
      - @logs.each do |log|
        = log_display(log)
    #bot.tab-content
      = render 'dashboard/bots/bot_form', bot: @bot
    #boss.tab-content
      = render 'dashboard/bosses/boss_form', boss: @bot.boss
  .dashboard-boss
    = render 'bots/boss_card', bot: @bot

= content_for :after_js do
  :javascript
    var logsWaitlist = [];
    var logDelayed = false;
    App.cable.subscriptions.create(
      {
        channel: 'DashboardChannel',
        bot_id: #{@bot.id}
      },
      {
        connected: function(data) {
          console.log("#{"[connected dashboard #{@bot.id}]"}");
          $.get(
            "#{dashboard_bots_status_index_url}?bot_id=#{@bot.id}",
            null
          )
        },
        received: function(data) {
          if (data['html']) {
            $('#boss').html(data['html']);
          } else if (data['connected'] && data['moderator']) {
            $('#bot-connected').html(data['connected']);
            $('#bot-moderator').html(data['moderator']);
          } else if (data['log']) {
            let log = data['log'];
            logsWaitlist.unshift(log);
            prependLog();
          }
        }
      }
    );

    function prependLog () {
      if (!logDelayed && logsWaitlist.length > 0) {
        logDelayed = true;
        let log = logsWaitlist.pop()
        $('#logs').prepend(log);
        $('.log').first().hide().slideDown();
        setTimeout(function () {
        logDelayed = false;
        prependLog()
        }, 500);
      }
    };

  = render 'bots/after_js_bot'
